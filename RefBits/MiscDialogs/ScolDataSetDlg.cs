//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.2914.16
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace WindowsApplication1
{
    using System;
    using System.Data;
    using System.Runtime.Serialization;
    using System.Xml;

    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public class ScolDataSetDlg : System.Data.DataSet
    {
        private SimpleColumnsDataTable tableSimpleColumns;

        public ScolDataSetDlg()
        {
            this.Initclass();
        }

        private ScolDataSetDlg(SerializationInfo info, StreamingContext context)
        {
            this.Initclass();
            this.GetSerializationData(info, context);
        }

        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SimpleColumnsDataTable SimpleColumns
        {
            get
            {
                return this.tableSimpleColumns;
            }
        }

        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        protected override void ReadXmlSerializable(XmlReader reader)
        {
            this.ReadXml(reader, XmlReadMode.IgnoreSchema);
        }

        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }

        private void Initclass()
        {
            this.DataSetName = "ScolDataSetDlg";
            this.Namespace = "http://www.tempuri.org/ScolDataSetDlg.xsd";
            this.tableSimpleColumns = new SimpleColumnsDataTable();
            this.Tables.Add(this.tableSimpleColumns);
        }

        private bool ShouldSerializeSimpleColumns()
        {
            return false;
        }

        public delegate void SimpleColumnsRowChangeEventHandler(object sender, SimpleColumnsRowChangeEvent e);

        public class SimpleColumnsDataTable : DataTable, System.Collections.IEnumerable
        {
            private DataColumn columnColName;

            private DataColumn columnICP1;

            private DataColumn columnICP10;

            private DataColumn columnICP2;

            private DataColumn columnICP3;

            private DataColumn columnICP4;

            private DataColumn columnICP5;

            private DataColumn columnICP6;

            private DataColumn columnICP7;

            private DataColumn columnICP8;

            private DataColumn columnICP9;

            private DataColumn columnName1;

            private DataColumn columnName10;

            private DataColumn columnName2;

            private DataColumn columnName3;

            private DataColumn columnName4;

            private DataColumn columnName5;

            private DataColumn columnName6;

            private DataColumn columnName7;

            private DataColumn columnName8;

            private DataColumn columnName9;

            public SimpleColumnsDataTable() :
                    base("SimpleColumns")
            {
                this.Initclass();
            }

            [System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            public DataColumn ColNameColumn
            {
                get
                {
                    return this.columnColName;
                }
            }

            public DataColumn ICP1Column
            {
                get
                {
                    return this.columnICP1;
                }
            }

            public DataColumn ICP10Column
            {
                get
                {
                    return this.columnICP10;
                }
            }

            public DataColumn ICP2Column
            {
                get
                {
                    return this.columnICP2;
                }
            }

            public DataColumn ICP3Column
            {
                get
                {
                    return this.columnICP3;
                }
            }

            public DataColumn ICP4Column
            {
                get
                {
                    return this.columnICP4;
                }
            }

            public DataColumn ICP5Column
            {
                get
                {
                    return this.columnICP5;
                }
            }

            public DataColumn ICP6Column
            {
                get
                {
                    return this.columnICP6;
                }
            }

            public DataColumn ICP7Column
            {
                get
                {
                    return this.columnICP7;
                }
            }

            public DataColumn ICP8Column
            {
                get
                {
                    return this.columnICP8;
                }
            }

            public DataColumn ICP9Column
            {
                get
                {
                    return this.columnICP9;
                }
            }

            public DataColumn Name1Column
            {
                get
                {
                    return this.columnName1;
                }
            }

            public DataColumn Name10Column
            {
                get
                {
                    return this.columnName10;
                }
            }

            public DataColumn Name2Column
            {
                get
                {
                    return this.columnName2;
                }
            }

            public DataColumn Name3Column
            {
                get
                {
                    return this.columnName3;
                }
            }

            public DataColumn Name4Column
            {
                get
                {
                    return this.columnName4;
                }
            }

            public DataColumn Name5Column
            {
                get
                {
                    return this.columnName5;
                }
            }

            public DataColumn Name6Column
            {
                get
                {
                    return this.columnName6;
                }
            }

            public DataColumn Name7Column
            {
                get
                {
                    return this.columnName7;
                }
            }

            public DataColumn Name8Column
            {
                get
                {
                    return this.columnName8;
                }
            }

            public DataColumn Name9Column
            {
                get
                {
                    return this.columnName9;
                }
            }

            public SimpleColumnsRow this[int index]
            {
                get
                {
                    return ((SimpleColumnsRow)(this.Rows[index]));
                }
            }

            public event SimpleColumnsRowChangeEventHandler SimpleColumnsRowChanged;

            public event SimpleColumnsRowChangeEventHandler SimpleColumnsRowChanging;

            public event SimpleColumnsRowChangeEventHandler SimpleColumnsRowDeleted;

            public event SimpleColumnsRowChangeEventHandler SimpleColumnsRowDeleting;

            public void AddSimpleColumnsRow(SimpleColumnsRow row)
            {
                this.Rows.Add(row);
            }

            public SimpleColumnsRow AddSimpleColumnsRow(
                        string ColName,
                        int ICP1,
                        int ICP10,
                        int ICP2,
                        int ICP3,
                        int ICP4,
                        int ICP5,
                        int ICP6,
                        int ICP7,
                        int ICP8,
                        int ICP9,
                        string Name1,
                        string Name10,
                        string Name2,
                        string Name3,
                        string Name4,
                        string Name5,
                        string Name6,
                        string Name7,
                        string Name8,
                        string Name9)
            {
                SimpleColumnsRow rowSimpleColumnsRow = ((SimpleColumnsRow)(this.NewRow()));
                rowSimpleColumnsRow.ItemArray = new object[] {
                        ColName,
                        ICP1,
                        ICP10,
                        ICP2,
                        ICP3,
                        ICP4,
                        ICP5,
                        ICP6,
                        ICP7,
                        ICP8,
                        ICP9,
                        Name1,
                        Name10,
                        Name2,
                        Name3,
                        Name4,
                        Name5,
                        Name6,
                        Name7,
                        Name8,
                        Name9};
                this.Rows.Add(rowSimpleColumnsRow);
                return rowSimpleColumnsRow;
            }

            public SimpleColumnsRow FindByColName(string ColName)
            {
                return ((SimpleColumnsRow)(this.Rows.Find(new object[] {
                            ColName})));
            }

            public System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            private void Initclass()
            {
                this.columnColName = new DataColumn("ColName", typeof(string), "", System.Data.MappingType.Element);
                this.columnColName.AllowDBNull = false;
                this.columnColName.Unique = true;
                this.Columns.Add(this.columnColName);
                this.columnICP1 = new DataColumn("ICP1", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP1);
                this.columnICP10 = new DataColumn("ICP10", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP10);
                this.columnICP2 = new DataColumn("ICP2", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP2);
                this.columnICP3 = new DataColumn("ICP3", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP3);
                this.columnICP4 = new DataColumn("ICP4", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP4);
                this.columnICP5 = new DataColumn("ICP5", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP5);
                this.columnICP6 = new DataColumn("ICP6", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP6);
                this.columnICP7 = new DataColumn("ICP7", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP7);
                this.columnICP8 = new DataColumn("ICP8", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP8);
                this.columnICP9 = new DataColumn("ICP9", typeof(int), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnICP9);
                this.columnName1 = new DataColumn("Name1", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName1);
                this.columnName10 = new DataColumn("Name10", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName10);
                this.columnName2 = new DataColumn("Name2", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName2);
                this.columnName3 = new DataColumn("Name3", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName3);
                this.columnName4 = new DataColumn("Name4", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName4);
                this.columnName5 = new DataColumn("Name5", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName5);
                this.columnName6 = new DataColumn("Name6", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName6);
                this.columnName7 = new DataColumn("Name7", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName7);
                this.columnName8 = new DataColumn("Name8", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName8);
                this.columnName9 = new DataColumn("Name9", typeof(string), "", System.Data.MappingType.Element);
                this.Columns.Add(this.columnName9);
                this.PrimaryKey = new DataColumn[] {
                        this.columnColName};
            }

            public SimpleColumnsRow NewSimpleColumnsRow()
            {
                return ((SimpleColumnsRow)(this.NewRow()));
            }

            protected override DataRow NewRowFromBuilder(DataRowBuilder builder)
            {
                // We need to ensure that all Rows in the tabled are typed rows.
                // Table calls new Row whenever it needs to create a row.
                // So the following conditions are covered by Row new Row(Record record)
                // * Cursor calls table.addRecord(record)
                // * table.addRow(object[] values) calls new Row(record)
                return NewRowFromBuilder(builder);
            }

            protected override System.Type GetRowType()
            {
                return typeof(SimpleColumnsRow);
            }

            protected override void OnRowChanged(DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.SimpleColumnsRowChanged != null))
                {
                    this.SimpleColumnsRowChanged(this, new SimpleColumnsRowChangeEvent(((SimpleColumnsRow)(e.Row)), e.Action));
                }
            }

            protected override void OnRowChanging(DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.SimpleColumnsRowChanging != null))
                {
                    this.SimpleColumnsRowChanging(this, new SimpleColumnsRowChangeEvent(((SimpleColumnsRow)(e.Row)), e.Action));
                }
            }

            protected override void OnRowDeleted(DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.SimpleColumnsRowDeleted != null))
                {
                    this.SimpleColumnsRowDeleted(this, new SimpleColumnsRowChangeEvent(((SimpleColumnsRow)(e.Row)), e.Action));
                }
            }

            protected override void OnRowDeleting(DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.SimpleColumnsRowDeleting != null))
                {
                    this.SimpleColumnsRowDeleting(this, new SimpleColumnsRowChangeEvent(((SimpleColumnsRow)(e.Row)), e.Action));
                }
            }

            public void RemoveSimpleColumnsRow(SimpleColumnsRow row)
            {
                this.Rows.Remove(row);
            }
        }

        public class SimpleColumnsRow : DataRow
        {
            private SimpleColumnsDataTable tableSimpleColumns;

            public SimpleColumnsRow(DataRowBuilder rb) :
                    base(rb)
            {
                this.tableSimpleColumns = ((SimpleColumnsDataTable)(this.Table));
            }

            public string ColName
            {
                get
                {
                    return ((string)(this[this.tableSimpleColumns.ColNameColumn]));
                }
                set
                {
                    this[this.tableSimpleColumns.ColNameColumn] = value;
                }
            }

            public int ICP1
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP1Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP1Column] = value;
                }
            }

            public int ICP10
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP10Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP10Column] = value;
                }
            }

            public int ICP2
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP2Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP2Column] = value;
                }
            }

            public int ICP3
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP3Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP3Column] = value;
                }
            }

            public int ICP4
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP4Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP4Column] = value;
                }
            }

            public int ICP5
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP5Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP5Column] = value;
                }
            }

            public int ICP6
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP6Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP6Column] = value;
                }
            }

            public int ICP7
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP7Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP7Column] = value;
                }
            }

            public int ICP8
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP8Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP8Column] = value;
                }
            }

            public int ICP9
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableSimpleColumns.ICP9Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.ICP9Column] = value;
                }
            }

            public string Name1
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name1Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name1Column] = value;
                }
            }

            public string Name10
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name10Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name10Column] = value;
                }
            }

            public string Name2
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name2Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name2Column] = value;
                }
            }

            public string Name3
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name3Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name3Column] = value;
                }
            }

            public string Name4
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name4Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name4Column] = value;
                }
            }

            public string Name5
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name5Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name5Column] = value;
                }
            }

            public string Name6
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name6Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name6Column] = value;
                }
            }

            public string Name7
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name7Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name7Column] = value;
                }
            }

            public string Name8
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name8Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name8Column] = value;
                }
            }

            public string Name9
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSimpleColumns.Name9Column]));
                    }
                    catch (InvalidCastException e)
                    {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSimpleColumns.Name9Column] = value;
                }
            }

            public bool IsICP1Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP1Column);
            }

            public void SetICP1Null()
            {
                this[this.tableSimpleColumns.ICP1Column] = System.Convert.DBNull;
            }

            public bool IsICP10Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP10Column);
            }

            public void SetICP10Null()
            {
                this[this.tableSimpleColumns.ICP10Column] = System.Convert.DBNull;
            }

            public bool IsICP2Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP2Column);
            }

            public void SetICP2Null()
            {
                this[this.tableSimpleColumns.ICP2Column] = System.Convert.DBNull;
            }

            public bool IsICP3Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP3Column);
            }

            public void SetICP3Null()
            {
                this[this.tableSimpleColumns.ICP3Column] = System.Convert.DBNull;
            }

            public bool IsICP4Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP4Column);
            }

            public void SetICP4Null()
            {
                this[this.tableSimpleColumns.ICP4Column] = System.Convert.DBNull;
            }

            public bool IsICP5Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP5Column);
            }

            public void SetICP5Null()
            {
                this[this.tableSimpleColumns.ICP5Column] = System.Convert.DBNull;
            }

            public bool IsICP6Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP6Column);
            }

            public void SetICP6Null()
            {
                this[this.tableSimpleColumns.ICP6Column] = System.Convert.DBNull;
            }

            public bool IsICP7Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP7Column);
            }

            public void SetICP7Null()
            {
                this[this.tableSimpleColumns.ICP7Column] = System.Convert.DBNull;
            }

            public bool IsICP8Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP8Column);
            }

            public void SetICP8Null()
            {
                this[this.tableSimpleColumns.ICP8Column] = System.Convert.DBNull;
            }

            public bool IsICP9Null()
            {
                return this.IsNull(this.tableSimpleColumns.ICP9Column);
            }

            public void SetICP9Null()
            {
                this[this.tableSimpleColumns.ICP9Column] = System.Convert.DBNull;
            }

            public bool IsName1Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name1Column);
            }

            public void SetName1Null()
            {
                this[this.tableSimpleColumns.Name1Column] = System.Convert.DBNull;
            }

            public bool IsName10Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name10Column);
            }

            public void SetName10Null()
            {
                this[this.tableSimpleColumns.Name10Column] = System.Convert.DBNull;
            }

            public bool IsName2Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name2Column);
            }

            public void SetName2Null()
            {
                this[this.tableSimpleColumns.Name2Column] = System.Convert.DBNull;
            }

            public bool IsName3Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name3Column);
            }

            public void SetName3Null()
            {
                this[this.tableSimpleColumns.Name3Column] = System.Convert.DBNull;
            }

            public bool IsName4Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name4Column);
            }

            public void SetName4Null()
            {
                this[this.tableSimpleColumns.Name4Column] = System.Convert.DBNull;
            }

            public bool IsName5Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name5Column);
            }

            public void SetName5Null()
            {
                this[this.tableSimpleColumns.Name5Column] = System.Convert.DBNull;
            }

            public bool IsName6Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name6Column);
            }

            public void SetName6Null()
            {
                this[this.tableSimpleColumns.Name6Column] = System.Convert.DBNull;
            }

            public bool IsName7Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name7Column);
            }

            public void SetName7Null()
            {
                this[this.tableSimpleColumns.Name7Column] = System.Convert.DBNull;
            }

            public bool IsName8Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name8Column);
            }

            public void SetName8Null()
            {
                this[this.tableSimpleColumns.Name8Column] = System.Convert.DBNull;
            }

            public bool IsName9Null()
            {
                return this.IsNull(this.tableSimpleColumns.Name9Column);
            }

            public void SetName9Null()
            {
                this[this.tableSimpleColumns.Name9Column] = System.Convert.DBNull;
            }
        }

        public class SimpleColumnsRowChangeEvent : EventArgs
        {
            private SimpleColumnsRow eventRow;

            private System.Data.DataRowAction eventAction;

            public SimpleColumnsRowChangeEvent(SimpleColumnsRow row, DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            public SimpleColumnsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            public DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
}